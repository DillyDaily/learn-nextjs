{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alifinney/Desktop/www/learn-next/pages/category/[products]/[product]/[productId].js\";\nimport { useRouter } from 'next/router';\nimport { getProductById } from '../../../dummy-data';\n\nconst ProductsSlug = () => {\n  const router = useRouter();\n  const productId = router.query.productId;\n  const product = getProductById(productId);\n  console.log(\"rout pathname\", router.pathname);\n  console.log(\"rout query\", router.query); //concrete value encoded in URL\n  // if ID of DB object: could send request to backend Server\n  // to fetch piece of data w/ id of router.query.slug\n  // can have nested dynamic paths\n  // can define catch all routes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" This will show the individ products - SLUG \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ProductsSlug;","map":{"version":3,"sources":["/Users/alifinney/Desktop/www/learn-next/pages/category/[products]/[product]/[productId].js"],"names":["useRouter","getProductById","ProductsSlug","router","productId","query","product","console","log","pathname"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,QAAMI,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaD,SAA/B;AACA,QAAME,OAAO,GAAGL,cAAc,CAACG,SAAD,CAA9B;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,MAAM,CAACM,QAApC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAAM,CAACE,KAAjC,EAPyB,CAOe;AAExC;AACA;AACA;AACA;;AAEE,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;AAqBA,eAAeH,YAAf","sourcesContent":["\nimport { useRouter } from 'next/router';\nimport { getProductById } from '../../../dummy-data';\n\nconst ProductsSlug = () => {\n  const router = useRouter();\n\n  const productId = router.query.productId;\n  const product = getProductById(productId);\n\n  console.log(\"rout pathname\", router.pathname)\n  console.log(\"rout query\", router.query) //concrete value encoded in URL\n\n  // if ID of DB object: could send request to backend Server\n  // to fetch piece of data w/ id of router.query.slug\n  // can have nested dynamic paths\n  // can define catch all routes\n  \n    return ( \n        <div>\n            <h2> This will show the individ products - SLUG </h2> \n        </div>\n    );\n};\n\nexport default ProductsSlug;"]},"metadata":{},"sourceType":"module"}