{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alifinney/Desktop/www/learn-next/pages/category/[products]/[product]/[productId].js\";\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getProductById } from '../../../dummy-data';\nimport ProductSummary from '../../../../components/product-detail/ProductSummary';\nimport ProjectLogistics from '../../../../components/product-detail/ProductLogistics';\nimport ProjectContent from '../../../../components/product-detail/ProductContent';\n\nconst ProductsSlug = () => {\n  const router = useRouter();\n  const productId = router.query.productId;\n  const product = getProductById(productId);\n  console.log(\"rout pathname\", router.pathname);\n  console.log(\"rout query\", router.query); //concrete value encoded in URL\n  // if ID of DB object: could send request to backend Server\n  // to fetch piece of data w/ id of router.query.slug\n  // can have nested dynamic paths\n  // can define catch all routes\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No event found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProductSummary, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectLogistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ProductsSlug;","map":{"version":3,"sources":["/Users/alifinney/Desktop/www/learn-next/pages/category/[products]/[product]/[productId].js"],"names":["Fragment","useRouter","getProductById","ProductSummary","ProjectLogistics","ProjectContent","ProductsSlug","router","productId","query","product","console","log","pathname"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,OAAOC,gBAAP,MAA6B,wDAA7B;AACA,OAAOC,cAAP,MAA2B,sDAA3B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAMO,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaD,SAA/B;AACA,QAAME,OAAO,GAAGR,cAAc,CAACM,SAAD,CAA9B;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,MAAM,CAACM,QAApC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAAM,CAACE,KAAjC,EAPyB,CAOe;AAExC;AACA;AACA;AACA;;AAEE,MAAI,CAACC,OAAL,EAAc;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;AA0BA,eAAeJ,YAAf","sourcesContent":["\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\n\nimport { getProductById } from '../../../dummy-data';\nimport ProductSummary from '../../../../components/product-detail/ProductSummary';\nimport ProjectLogistics from '../../../../components/product-detail/ProductLogistics';\nimport ProjectContent from '../../../../components/product-detail/ProductContent';\n\nconst ProductsSlug = () => {\n  const router = useRouter();\n\n  const productId = router.query.productId;\n  const product = getProductById(productId);\n\n  console.log(\"rout pathname\", router.pathname)\n  console.log(\"rout query\", router.query) //concrete value encoded in URL\n\n  // if ID of DB object: could send request to backend Server\n  // to fetch piece of data w/ id of router.query.slug\n  // can have nested dynamic paths\n  // can define catch all routes\n  \n    if (!product) {\n        return <p>No event found!</p>\n    }\n\n    return ( \n        <Fragment>\n            <ProductSummary />\n            <ProjectLogistics /> \n        </Fragment>\n    );\n};\n\nexport default ProductsSlug;"]},"metadata":{},"sourceType":"module"}