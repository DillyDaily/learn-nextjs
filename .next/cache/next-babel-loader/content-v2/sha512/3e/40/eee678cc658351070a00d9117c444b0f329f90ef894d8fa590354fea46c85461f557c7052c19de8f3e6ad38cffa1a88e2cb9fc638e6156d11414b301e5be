{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alifinney/Desktop/www/learn-next/pages/category/[products]/[product]/[productId].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getProductById } from '../../../dummy-data';\nimport ProductSummary from '../../../../components/product-detail/ProductSummary';\nimport ProjectLogistics from '../../../../components/product-detail/ProductLogistics';\nimport ProjectContent from '../../../../components/product-detail/ProductContent';\n\nvar ProductsSlug = function ProductsSlug() {\n  _s();\n\n  var router = useRouter();\n  var productId = router.query.productId;\n  var product = getProductById(productId);\n  console.log(\"rout pathname\", router.pathname);\n  console.log(\"rout query\", router.query); //concrete value encoded in URL\n  // if ID of DB object: could send request to backend Server\n  // to fetch piece of data w/ id of router.query.slug\n  // can have nested dynamic paths\n  // can define catch all routes\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No event found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProductSummary, {\n      title: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ProjectLogistics, {\n      date: product.date,\n      address: product.address,\n      image: product.image,\n      imageAlt: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ProjectContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ProductsSlug, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProductsSlug;\nexport default ProductsSlug;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsSlug\");","map":{"version":3,"sources":["/Users/alifinney/Desktop/www/learn-next/pages/category/[products]/[product]/[productId].js"],"names":["Fragment","useRouter","getProductById","ProductSummary","ProjectLogistics","ProjectContent","ProductsSlug","router","productId","query","product","console","log","pathname","name","date","address","image","description"],"mappings":";;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,OAAOC,gBAAP,MAA6B,wDAA7B;AACA,OAAOC,cAAP,MAA2B,sDAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,MAAMO,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaD,SAA/B;AACA,MAAME,OAAO,GAAGR,cAAc,CAACM,SAAD,CAA9B;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,MAAM,CAACM,QAApC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAAM,CAACE,KAAjC,EAPyB,CAOe;AAExC;AACA;AACA;AACA;;AAEE,MAAI,CAACC,OAAL,EAAc;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEA,OAAO,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,gBAAD;AACI,MAAA,IAAI,EAAEJ,OAAO,CAACK,IADlB;AAEI,MAAA,OAAO,EAAEL,OAAO,CAACM,OAFrB;AAGI,MAAA,KAAK,EAAEN,OAAO,CAACO,KAHnB;AAII,MAAA,QAAQ,EAAEP,OAAO,CAACI;AAJtB;AAAA;AAAA;AAAA;AAAA,aAFJ,eAOI,QAAC,cAAD;AAAA,6BACI;AAAA,kBAAIJ,OAAO,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CA/BD;;GAAMZ,Y;UACWL,S;;;KADXK,Y;AAiCN,eAAeA,YAAf","sourcesContent":["\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\n\nimport { getProductById } from '../../../dummy-data';\nimport ProductSummary from '../../../../components/product-detail/ProductSummary';\nimport ProjectLogistics from '../../../../components/product-detail/ProductLogistics';\nimport ProjectContent from '../../../../components/product-detail/ProductContent';\n\nconst ProductsSlug = () => {\n  const router = useRouter();\n\n  const productId = router.query.productId;\n  const product = getProductById(productId);\n\n  console.log(\"rout pathname\", router.pathname)\n  console.log(\"rout query\", router.query) //concrete value encoded in URL\n\n  // if ID of DB object: could send request to backend Server\n  // to fetch piece of data w/ id of router.query.slug\n  // can have nested dynamic paths\n  // can define catch all routes\n  \n    if (!product) {\n        return <p>No event found!</p>\n    }\n\n    return ( \n        <Fragment>\n            <ProductSummary title={product.name} />\n            <ProjectLogistics \n                date={product.date} \n                address={product.address} \n                image={product.image} \n                imageAlt={product.name} /> \n            <ProjectContent>\n                <p>{product.description}</p>\n            </ProjectContent>\n        </Fragment>\n    );\n};\n\nexport default ProductsSlug;"]},"metadata":{},"sourceType":"module"}